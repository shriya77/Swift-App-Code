import SwiftUI
struct ContentView: View {
    @State var km = 1.00
    @State var velocity = 1.00
    @State var time = 1.00
    @State var velfinal = 1.00
    @State var acc = 1.00
    var body: some View {
        VStack{
            Text("SUVAT SOLVER")
                .fontWeight(/*@START_MENU_TOKEN@*/.bold/*@END_MENU_TOKEN@*/)
                .font(.title)
                .padding()
                .padding()
                .padding()
                .padding()
                .padding()
                .foregroundColor(.black)
            HStack {
                Text("Displacement")
                .padding()
                TextField("Quantity 1", value: $km, format: .number)
                .textFieldStyle(.roundedBorder)
                .border(.cyan, width:4)
                .keyboardType(.decimalPad)
            }
            HStack {
                Text("Initial velocity")
                    .padding()
                TextField("Quantity 1", value: $velocity, format: .number)
                    .textFieldStyle(.roundedBorder)
                    .border(.green, width:4)
                    .keyboardType(.decimalPad)
            }
            HStack {
                Text("Final velocity")
                    .padding()
                TextField("Quantity 1", value: $velfinal, format: .number)
                    .textFieldStyle(.roundedBorder)
                    .border(.black, width:4)
                    .keyboardType(.decimalPad)
            }
        }
        HStack {
            Text("Acceleration")
                .padding()
            TextField("Quantity 1", value: $acc, format: .number)
                .textFieldStyle(.roundedBorder)
                .border(.gray, width:4)
                .keyboardType(.decimalPad)
        }
        HStack {
            Text("Time")
                .padding()
            TextField("Quantity 1", value: $time, format: .number)
                .textFieldStyle(.roundedBorder)
                .border(.indigo, width:4)
                .keyboardType(.decimalPad)
        }
        HStack {
            Text("Answer:")
                .padding()
            //Text(String((velocity*time)+(0.5*acc*time^2)))
            Text(String((velocity*time)+(0.5*acc*time*time)))
            Text("km")
        }
        TabView {
            Text("s=ut + 1/2at^2")
                .bold()
                .foregroundColor(.cyan)
                .dynamicTypeSize(/*@START_MENU_TOKEN@*/.xLarge/*@END_MENU_TOKEN@*/)
                .font(.title3)
                .tabItem {
                    Label("s", systemImage: "star")
                }
            Text("initial velocity:")
                .bold()
                .foregroundColor(.green)
                .dynamicTypeSize(.xLarge)
                .font(.title3)
                .tabItem {
                    Label("u", systemImage: "square")
                }
            Text("final velocity:")
                .bold()
                .foregroundColor(.black)
                .dynamicTypeSize(.xLarge)
                .font(.title3)
                .tabItem {
                    Label("v", systemImage: "oval")
                }
            Text("acceleration:")
                .bold()
                .foregroundColor(.gray)
                .dynamicTypeSize(.xLarge)
                .font(.title3)
                .tabItem {
                    Label("a", systemImage: "rectangle")
                }
            Text("time:")
                .bold()
                .foregroundColor(.indigo)
                .dynamicTypeSize(.xLarge)
                .font(.title3)
                .tabItem {
                    Label("t", systemImage: "circle")
                }
    }
    }
}
